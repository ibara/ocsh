#!/bin/sh

# This configure script written by Brian Callahan <bcallah@openbsd.org>
# and released into the Public Domain.

cccheck() {
  if [ ! -z "$CC" ] ; then
cat << EOF > conftest.c
int main(void){return 0;}
EOF
    $CC -o conftest conftest.c > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
      rm -f conftest conftest.c
      cc="$CC"
      return 0
    else
      rm -f conftest conftest.c
    fi
  fi

  for compiler in cc clang pcc xlc gcc ; do
cat << EOF > conftest.c
int main(void){return 0;}
EOF

    $compiler -o conftest conftest.c > /dev/null 2>&1

    if [ $? -eq 0 ] ; then
      rm -f conftest conftest.c
      cc="$compiler"
      return 0
    else
      rm -f conftest conftest.c
    fi
  done
  return 1
}

reallocarraycheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){reallocarray(NULL, 0, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

signamecheck() {
  cat << EOF > conftest.c
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
int main(void){printf("%s",sys_signame[0]);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strnvischeck() {
  cat << EOF > conftest.c
#include <stdlib.h>
#include <vis.h>
int main(void){strnvis(NULL,NULL,0, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strtonumcheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){strtonum(NULL, 0, 0, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

vischeck() {
  cat << EOF > conftest.c
#include <stdlib.h>
#include <vis.h>
int main(void){vis(NULL,0,0, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

if [ ! -z "$PREFIX" ] ; then
prefix="$PREFIX"
else
prefix="/usr/local"
fi

mandir="$prefix/man/man1"

# Options.
for opt
do
  case "$opt" in
    --prefix=*)
	prefix=`echo $opt | cut -d '=' -f 2`
	;;
    --mandir=*)
	mandir=`echo $opt | cut -d '=' -f 2`
	;;
    --help|-h)
	echo "Usage: configure [options]"
	echo ""
	echo "Options:"
	printf "  --help or -h               "
	echo "Display this help message"
	printf "  --prefix=PREFIX            "
	echo "Top level install directory is PREFIX [$prefix]"
	printf "  --mandir=MANDIR            "
	echo "Manual pages are installed to MANDIR [$mandir]"
	exit 1
	;;
    *)
	echo "Unknown option: $opt"
	;;
  esac
done

if [ ! -z "$CFLAGS" ] ; then
cflags="$CFLAGS"
else
cflags=""
fi

printf "checking for C compiler... "
cccheck
if [ $? -ne 0 ] ; then
  echo "not found"
  echo "Please install a C compiler and re-run configure."
  exit 1
else
  echo "$cc"
fi

printf "checking for OS... "
os=`uname -s`
echo "$os"

if [ "x$os" = "xLinux" ] ; then
  cflags="$cflags -D_GNU_SOURCE"
elif [ "x$os" = "xNetBSD" ] ; then
  tflags="-D_OPENBSD_SOURCE"
  cflags="$cflags $tflags"
else
  tflags=""
fi

cat << EOF > config.h
/* This file automatically generated by configure.  */

EOF

printf "checking for reallocarray... "
reallocarraycheck
if [ $? -ne 0 ] ; then
  echo "#define NEED_REALLOCARRAY" >> config.h
  echo "no"
else
  echo "yes"
fi

printf "checking for strnvis... "
strnvischeck
if [ $? -ne 0 ] ; then
  echo "#define NEED_STRNVIS" >> config.h
  echo "no"
else
  echo "yes"
fi

printf "checking for strtonum... "
strtonumcheck
if [ $? -ne 0 ] ; then
  echo "#define NEED_STRTONUM" >> config.h
  echo "no"
else
  echo "yes"
fi

printf "checking for sys_signame... "
signamecheck
if [ $? -ne 0 ] ; then
  echo "#define NEED_SIGNAME" >> config.h
  echo "no"
else
  echo "yes"
fi

printf "checking for vis... "
vischeck
if [ $? -ne 0 ] ; then
  echo "#define NEED_VIS" >> config.h
  echo "no"
else
  echo "yes"
fi

cat << EOF > Makefile
# This Makefile automatically generated by configure.

CC =		$cc
CFLAGS =	$cflags
PREFIX =	$prefix
MANDIR =	$mandir
PROG =		ocsh

OBJS=	alloc.o char.o const.o csh.o dir.o dol.o error.o exec.o exp.o file.o \\
	func.o glob.o hist.o init.o lex.o misc.o parse.o proc.o \\
	sem.o set.o str.o time.o reallocarray.o signame.o strtonum.o

ETS =	\`grep -w \${PREFIX}/bin/\${PROG} /etc/shells > /dev/null; \\
	[ \$\$? -ne 0 ] && echo "\${PREFIX}/bin/\${PROG}" >> /etc/shells\`

all: \${PROG}

\${PROG}: error.h const.h \${OBJS}
	\${CC} \${LDFLAGS} -o \${PROG} \${OBJS}

error.h: error.c
	@rm -f error.h
	@echo '/* Do not edit this file, make creates it. */' > error.h
	@echo '#ifndef _h_sh_err' >> error.h
	@echo '#define _h_sh_err' >> error.h
	egrep 'ERR_' \$*.c | egrep '^#define' >> error.h
	@echo '#endif /* _h_sh_err */' >> error.h

const.h: const.c
	@rm -f const.h
	@echo '/* Do not edit this file, make creates it. */' > const.h
	\${CC} -E \${CFLAGS} \$*.c | egrep 'Char STR' | \\
	    sed -e 's/Char \([a-zA-Z0-9_]*\)\(.*\)/extern Char \1[];/' | \\
	    sort >> const.h

install:
	install -c -s -m 755 \${PROG} \${PREFIX}/bin
	install -c -m 644 ocsh.1 \${MANDIR}/\${PROG}.1
	echo \${ETS}

test:
	echo "No tests"

clean:
	rm -f \${PROG} \${OBJS} error.h const.h

distclean: clean
	rm -f Makefile config.h
EOF
